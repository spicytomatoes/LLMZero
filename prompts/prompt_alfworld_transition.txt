
Provide a sample next state as well as a list of valid actions of a household modeled as a POMDP (Partially Observable Markov Decision Process) based on a previous state and a given action. The system involves looking for specific household items and placing them in specific locations within the house.

# Environment Entities

The household environment is made up of two types of entities:
1. **Objects**: These are common household items. These objects can be picked up or put down. (ex. book, pen, cd, alarmclock)
2. **Receptacles**: These are household furniture that are treated as locations which agents can visit. They contain objects either on top or inside of them. (ex. armchair, desk, drawer, shelf)

Here are additional characteristics of these entities:
- There may be multiple copies of receptacles or objects. To differentiate them, a number is added to each item regardless of if it has multiple copies or not. (ex. armchair 1, drawer 1, drawer 2, book 1, pen 1, pen 2, pen 3)
- Objects may be visible or hidden in receptacles. Visible objects are observed by the agent upon visiting the location. Hidden objects can only be observed after performing an action on the receptacle.
- There are receptacles that are also treated as objects. They can be picked up or placed down. However, they can also contain items inside of them. (ex. vase)
- When generating entities, keep in mind the specific task of the agent. This can be found in the previous state.

# State Representation

Agents in the household do not have complete knowledge of the house's layout. Instead, they are only able to observe receptacles and objects within their proximity.

Here are the only valid formats for states. Note you are meant to replace words surrounded by curly brackets ({}) by the specific name of entities.
- You arrive at {receptacle}. On the {receptacle}, you see {objects}.
- You arrive at {receptacle}. On the {receptacle}, you see nothing.
- You arrive at {receptacle}. The {receptacle} is closed.
- You arrive at {receptacle}. The {receptacle} is open. In it, you see {objects}.
- You arrive at {receptacle}. The {receptacle} is open. In it, you see nothing.
- You open the {receptacle}. The {receptacle} is open. In it, you see {objects}.
- You open the {receptacle}. The {receptacle} is open. In it, you see nothing.
- You close the {receptacle}.
- You pick up the {object} from the {name}.
- You pick up the {object}.
- You put the {object} in/on the {receptacle}.
- You put the {object} in the {receptacle}.
- On the {receptacle}, you see {objects}.
- You are carrying: {objects}.
- You are not carrying anything.
- You are in the middle of a room. Looking quickly around you, you see {receptacles}.
- You are facing the {receptacle}. On the {receptacle}, you see {objects}.
- Nothing happens.

All of these state formats will have the goal appended at the end of it in the format below. Note that {goal} is a placedholder and should be replaced by the current goal. This can be found in the previous state given.

Your task is to: {goal}

# Valid Actions

The valid actions are dependent on the current state you are in because they are dependent on the objects and receptacles you see. Here are a few examples of valid actions. Note you are meant to replace words surrounded by curly brackets ({}) by the specific name of entities.
- go to {receptacle}
- open {receptacle}
- close {receptacle}
- take {object} from {receptacle}
- put {object} in/on {receptacle}
- inventory
- examine {receptacle}
- examine {object}
- look

Notes:
- When generating entities for the valid actions, keep in mind the specific task of the agent. This can be found in the given state.
- Actions that you generate should be dependent on the given state which is the new current state of the agent.

# Transition Rules

Below are the types of action the agent can take as well as possible states you can reach. Note you are meant to replace words surrounded by curly brackets ({}) by the specific name of entities.

1. **Moving to a Receptacle**
This action is taken by the agent to move from his current location to another visible location. The next state should move the agent to the next location and show all of the objects and receptacle the agent can observe in the new location.
Action Format: go to {receptacle}
Possible Next States: "You arrive at {receptacle}. On the {receptacle}, you see {objects}", "You arrive at {receptacle}. On the {receptacle}, you see nothing.", "You arrive at {receptacle}. The {receptacle} is closed.", "You arrive at {receptacle}. The {receptacle} is open. In it, you see {objects}.", "You arrive at {receptacle}. The {receptacle} is open. In it, you see nothing."
Possible Next Actions: Actions that interact with newly observed receptacles and objects.

2. **Opening a Receptacle**
This action is taken by the agent to open a receptacle that can be opened. The next state should metion the opened receptacle and show all of objects inside that receptacle.
Action Format: open {receptacle}
Possible Next States: "You open the {receptacle}. The {receptacle} is open. In it, you see {objects}.", "You open the {receptacle}. The {receptacle} is open. In it, you see nothing."
Possible Next Actions: Actions that interact with newly observed receptacles and objects.

3. **Closing a Receptacle**
This action is taken by the agent to close a previously opened receptacle. The next state should mention the closed receptacle.
Action Format: close {receptacle}
Possible Next States: "You close the {receptacle}."
Possible Next Actions: Similar actions to previous state but do not include actions interacting with objects inside the closed receptacle.

4. **Pick up an Object**
This action is taken by the agent to pick up a visible object in receptacle. The next state should move the object to the agent's possession.
Action Format: take {object} from {receptacle}
Possible Next States: "You pick up the {object} from the {name}.", "You pick up the {object}."
Possible Next Actions: Similar actions to previous state but remove the action of picking up the object and add the action of placing the object.

5. **Place an Object in/on a Receptacle**
This action is taken by the agent to place an object in/on a receptacle. The next state should move the object from the agent's possession to the receptacle.
Action Format: put {object} in/on {receptacle}
Possible Next States: "You pick up the {object} from the {name}.", "You pick up the {object}."
Possible Next Actions: Similar actions to previous state but remove the action of placing the object and add the action of picking up the object.

6. **Examine a Receptacle**
This action is taken by the agent to examine a visible receptacle. The next state should mention all of the objects an agent can see on the receptacle.
Action Format: examine {receptacle}
Possible Next States: "On the {receptacle}, you see {objects}."
Possible Next Actions: The same actions as the previous state.

7. **Examine an Object**
This action is taken by the agent to examine an object in the agent's possession. The next state should describe the object they are seeing.
Action Format: examine {object}
Possible Next States: ""
Possible Next Actions: The same actions as the previous state.

8. **Checking Inventory**
This action is taken by the agent to check the current objects in their possession. The next state should list out all the objects the agent has. This can be done in any state regardless of what the agent observes.
Action Format: inventory
Possible Next States: "You are carrying: {objects}.", "You are not carrying anything."
Possible Next Actions: The same actions as the previous state.

9. **Examining Current Environment**
This action is taken by the agent to observe his current surroundings. The next state should list out all the receptacle and objects the agent can observe. This can be done in any state regardless of what the agent observes.
Action Format: look
Possible Next States: "You are in the middle of a room. Looking quickly around you, you see {receptacles}.", "You are facing the {receptacle}. On the {receptacle}, you see {objects}."
Possible Next Actions: The same actions as the previous state.

Notes:
- If the agent takes any action that doesn't follow the formats specified above, the next state is always "Nothing happens."
- If the agent does any of the following actions: **Examine a Receptacle**, **Examine an Object**, **Checking Inventory**, **Examining Current Environment**, the the list of valid actions is the same as the previous list

# Replacing Receptacles and States

For the valid states under State Representation, you are meant to replace the {receptacle} and {object} markers 

# Steps to Determine Next State

1. Choose which transition rule is applicable given the current state and action. The action should match one of the specified action formats or else, the next state is always, "Nothing happens."
2. Once you have an idea of the format of the possible next states, replace the {object} and {receptacle} placeholders with actual household items. Choose items which have a high likelihood of being found there given the household environment, previous state and given action.
3. Get the goal from the previous state and add it to the state word per word.

# Steps to Determine Next Valid Actions

1. Choose which transition rule is applicable given the current state and action. The action should match one of the specified action formats or else, the next valid actions are always the same as the previous actions.
2. Given the previous state, previous valid actions and current state, see which actions can most likely be taken from the next state generated in the previous section.
3. Generate a list of possible actions and output them in the specified format given in # Valid Actions.

Notes:
- Here are the valid actions for receptacles: go to {receptacle}, open {receptacle}, close {receptacle}, examine {receptacle}
- Here are the valid actions for objects: take {object} from {receptacle}, put {object} in/on {receptacle}, examine {object}
- These objects can always be done regardless of the current state, previous valid actions, and action: inventory, look
- Eliminate actions that do not make sense given your previous action. (ex. Picking up an object that you picked up from the previous action)

# Output Format

Provide your reasoning, then predict the next state and a list of the next valid actions. The reasoning should be following the steps above and concise. The output state should be represented in the text format below. Note that {state} in the test is meant to be replaced by what you think is the next state and {goa} is meant to be replaced by the goal from the previous state. The placeholder {valid actions}, should be replaced by a comma-separated list of valid actions.

```plaintext
Next state: {state}

Your task is to: {goal}
```

```plaintext
Valid actions:
{valid_actions}
```

# Examples

### Example 1 
**Current State**:  
-= Welcome to TextWorld, ALFRED! =-\n\nYou are in the middle of a room. Looking quickly around you, you see a bed 1, a desk 1, a drawer 3, a drawer 2, a drawer 1, a garbagecan 1, a laundryhamper 1, a shelf 2, a shelf 1, and a sidetable 1.\n\nYour task is to: put a alarmclock in desk.

**Current Valid Actions**
go to bed 1, go to desk 1, go to drawer 1, go to drawer 2, go to drawer 3, go to garbagecan 1, go to laundryhamper 1, go to shelf 1, go to shelf 2, go to sidetable 1, inventory, look

**Action**: go to sidetable 1  

**Reasoning**:
The given action follows the action format for **Moving to a Receptacle**. Thus, in the next state, we expect the agent to move to the location sidetable 1. Alarmclocks, credit cards, desklamps, keychains, pen and pencils are objects that can usually be found on a sidetable. Using this information, we produce the next output in the format specified.
Given that we predict the next state to arrive in sidetable 1, we must generate actions related to the new objects and receptacles the agent observes.

**Output**:
```plaintext
Next State: 
You arrive at sidetable 1. On the sidetable 1, you see a alarmclock 3, a alarmclock 2, a alarmclock 1, a creditcard 1, a desklamp 1, a keychain 1, a pen 3, a pen 2, and a pencil 3.

Your task is to: put a alarmclock in desk.
```

```plaintext
Valid actions:
examine sidetable 1, go to bed 1, go to desk 1, go to drawer 1, go to drawer 2, go to drawer 3, go to garbagecan 1, go to laundryhamper 1, go to shelf 1, go to shelf 2, inventory, look, take alarmclock 1 from sidetable 1, take alarmclock 2 from sidetable 1, take alarmclock 3 from sidetable 1, take creditcard 1 from sidetable 1, take keychain 1 from sidetable 1, take pen 2 from sidetable 1, take pen 3 from sidetable 1, take pencil 3 from sidetable 1, use desklamp 1
```

### Example 2
**Current State**
You arrive at shelf 1. On the shelf 1, you see a cd 1, and a pen 1.\n\nYour task is to: put some pen on shelf.

**Current Valid Actions**
examine shelf 1, go to armchair 1, go to bed 1, go to drawer 1, go to drawer 10, go to drawer 11, go to drawer 12, go to drawer 13, go to drawer 14, go to drawer 15, go to drawer 16, go to drawer 2, go to drawer 3, go to drawer 4, go to drawer 5, go to drawer 6, go to drawer 7, go to drawer 8, go to drawer 9, go to dresser 1, go to dresser 2, go to garbagecan 1, go to shelf 2, go to sidetable 1, go to sidetable 2, inventory, look, take cd 1 from shelf 1, take pen 1 from shelf 1

**Action**: some action

**Reasoning**
When comparing the given action to all specified action formats, it is not similar any of them. Therefore, the next state will always be "Nothing happens." The next valid actions will also remain the same because of that.

**Output**:
```plaintext
Next State: 
Nothing happens.

Your task is to: put some pen on shelf.
```

```plaintext
Valid actions:
examine shelf 1, go to armchair 1, go to bed 1, go to drawer 1, go to drawer 10, go to drawer 11, go to drawer 12, go to drawer 13, go to drawer 14, go to drawer 15, go to drawer 16, go to drawer 2, go to drawer 3, go to drawer 4, go to drawer 5, go to drawer 6, go to drawer 7, go to drawer 8, go to drawer 9, go to dresser 1, go to dresser 2, go to garbagecan 1, go to shelf 2, go to sidetable 1, go to sidetable 2, inventory, look, take cd 1 from shelf 1, take pen 1 from shelf 1
```

### Example 3
**Current State**
You arrive at drawer 2. The drawer 2 is closed.\n\nYour task is to: put some pen on shelf.

**Current Valid Actions**
open drawer 2, examine drawer 2, go to bed 1, go to cabinet 1, go to cabinet 2, go to cabinet 3, go to cabinet 4, go to desk 1, go to drawer 1, go to garbagecan 1, go to shelf 1, go to sidetable 1, inventory, look

**Action**: open drawer 2

**Reasoning**
This action has the same action format as **Opening a Receptacle**. This means the agent opened a receptacle, in this case, drawer 8. Drawer 8 will now be open and the agent can observe the objects located inside of it. Books, CDs, pencils, and cellphones are objects commonly found in drawers. Using this information we replace the {receptacle} and {objects} placeholders from the state format to produce the predicted next state.
Given that we predict the next state to have the drawer opened, we must have new actions that interact with the new objects we observe from the open drawer. We must add actions that can pickup these objects. We must also add an action to close the shelf.


**Output**:
```plaintext
Next State: 
You open the drawer 2. The drawer 2 is open. In it, you see a cellphone 1.

Your task is to: put some pen on shelf.
```

```plaintext
Valid actions:
close drawer 2, examine drawer 2, go to bed 1, go to cabinet 1, go to cabinet 2, go to cabinet 3, go to cabinet 4, go to desk 1, go to drawer 1, go to garbagecan 1, go to shelf 1, go to sidetable 1, inventory, look, take cellphone 1 from drawer 2
```

### Example 4
**Current State**
You arrive at shelf 2. On the shelf 2, you see a desklamp 1.\n\nYour task is to: put some alarmclock on shelf.

**Current Valid Actions**
examine alarmclock 1, examine shelf 2, go to bed 1, go to desk 1, go to desk 2, go to garbagecan 1, go to shelf 1, go to shelf 3, go to shelf 4, go to shelf 5, inventory, look, put alarmclock 1 in/on shelf 2, use desklamp 1

**Action**: put alarmclock 1 in/on shelf 2

**Reasoning**
This action has the same action format as **Place an Object in/on a Receptacle**. Thus, the agent is trying to place an object in his inventory on to a visible receptacle. We assume that the object, alarmclock 2, is in the agent's possession. Alarmclock 2 will now be found on shelf 2 because the agent placed it on that receptacle.
Given that the alarmclock 1 is now on shelf 2, we will no longer be able to put the alarmclock down. Instead, we will have a new action for taking the alarmclock. The rest of the actions should be the same.

**Output**:
```plaintext
Next State: 
You put the alarmclock 2 in/on the shelf 2.

Your task is to: put some alarmclock on shelf. 
```

```plaintext
Valid actions:
examine shelf 2, go to bed 1, go to desk 1, go to desk 2, go to garbagecan 1, go to shelf 1, go to shelf 3, go to shelf 4, go to shelf 5, inventory, look, take alarmclock 1 from shelf 2, use desklamp 1
```

